using System;  
using System.Net;  
using System.Net.Sockets;  
using System.Text;  
using System.Threading;  

public class TcpServer  
{  
    private TcpListener _listener;  
    private bool _isRunning;  

    public TcpServer(int port)  
    {  
        _listener = new TcpListener(IPAddress.Any, port);  
        _isRunning = false;  
    }  

    public void Start()  
    {  
        _listener.Start();  
        _isRunning = true;  
        Console.WriteLine("TCP Server started...");  
        ListenForClients();  
    }  

    private void ListenForClients()  
    {  
        while (_isRunning)  
        {  
            var client = _listener.AcceptTcpClient();  
            Console.WriteLine("Client connected.");  
            Thread clientThread = new Thread(HandleClient);  
            clientThread.Start(client);  
        }  
    }  

    private void HandleClient(object clientObject)  
    {  
        using (var client = (TcpClient)clientObject)  
        {  
            var stream = client.GetStream();  
            byte[] buffer = new byte[1024];  
            int bytesRead;  

            while ((bytesRead = stream.Read(buffer, 0, buffer.Length)) != 0)  
            {  
                string message = Encoding.UTF8.GetString(buffer, 0, bytesRead);  
                Console.WriteLine($"Received: {message}");  

                // Echo the message back to the client  
                stream.Write(buffer, 0, bytesRead);  
                Console.WriteLine($"Sent: {message}");  
            }  
        }  

        Console.WriteLine("Client disconnected.");  
    }  

    public void Stop()  
    {  
        _isRunning = false;  
        _listener.Stop();  
    }  
}
